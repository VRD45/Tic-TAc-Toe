{"version":3,"sources":["myComponents/Square.js","myComponents/Container.js","App.js","reportWebVitals.js","index.js"],"names":["Square","props","className","onClick","e","value","Container","useState","status","setStatus","Array","fill","squares","setSquares","isXturn","setisXturn","step","isNextTurn","history","setHistory","index","setIndex","handleClick","i","console","log","stepHistory","concat","lines","length","a","b","c","count","checkWinner","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f91032b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Square = (props) => {\r\n    // const [value , setValue]  = useState(null);\r\n    \r\n    return (\r\n        <button className=\"square\" onClick={(e)=>props.onClick(e)}>\r\n            {props.value}\r\n        </button>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\nimport { Square } from './Square'\r\n\r\nexport const Container = () => {\r\n    const [status, setStatus] = useState(\"X's Chance\")\r\n    var [squares, setSquares] = useState(Array(9).fill(null))\r\n    const [isXturn, setisXturn] = useState(true)\r\n    var [history, setHistory] = useState([{\r\n        step:0,\r\n        squares:Array(9).fill(null),\r\n        isNextTurn: false\r\n    }])\r\n    const [index, setIndex] = useState(0)\r\n\r\n    function checkWinner(){\r\n        const lines = [\r\n            [0, 1, 2],\r\n            [3, 4, 5],\r\n            [6, 7, 8],\r\n            [0, 3, 6],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [0, 4, 8],\r\n            [2, 4, 6],\r\n          ];\r\n        \r\n        for (let i = 0; i < lines.length; i++) {\r\n            const [a, b, c] = lines[i];\r\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n                setStatus(squares[a]+\" Wins!!\");\r\n                return squares[a];\r\n            }\r\n          }\r\n          var count = 0;\r\n        for(let i=0;i<squares.length;i++){\r\n            if(squares[i]===null){\r\n                count++;\r\n            }\r\n        }\r\n        if(count===0){\r\n            setStatus(\"Match Draw!!\")\r\n            // alert(\"Match draw\");\r\n            return true;\r\n        }\r\n          return null;\r\n    }\r\n\r\n    function handleClick(i,e) {\r\n        // alert(\"isXturn\");\r\n        if(isXturn){\r\n            if(squares[i]==null){\r\n                squares[i]=\"X\";\r\n                setSquares(squares);\r\n                setIndex(index+1);\r\n                console.log(squares);\r\n                console.log(index);\r\n                let stepHistory={\r\n                    step: index,\r\n                    squares: squares,\r\n                    isNextTurn: true\r\n                };\r\n                console.log(history);\r\n                setHistory([history.concat(stepHistory)])\r\n                setHistory(history);\r\n                // setSquares(squares);\r\n                setisXturn(false);\r\n                setStatus(\"O's Chance\")\r\n            }\r\n        }else{\r\n            if(squares[i]==null){\r\n                squares[i]=\"O\";\r\n                setSquares(squares);\r\n                setIndex(index+1);\r\n                console.log(index);\r\n                let stepHistory={\r\n                    step: index,\r\n                    squares: squares,\r\n                    isNextTurn: true\r\n                };\r\n                console.log(history);\r\n                setHistory([...history,stepHistory])\r\n                \r\n                setisXturn(true);\r\n                setStatus(\"X's Chance\")\r\n            }\r\n        }\r\n        // console.log(history);\r\n        // checkWinner();\r\n        // alert(checkWinner());\r\n        if(checkWinner()){\r\n            setSquares(Array(9).fill(null))\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n        <div id=\"status\">{status}</div>\r\n        <div id=\"container\">\r\n            <Square value={squares[0]} onClick={(e)=>handleClick(0,e)}/>\r\n            <Square value={squares[1]} onClick={(e)=>handleClick(1,e)}/>\r\n            <Square value={squares[2]} onClick={(e)=>handleClick(2,e)}/>\r\n            <Square value={squares[3]} onClick={(e)=>handleClick(3,e)}/>\r\n            <Square value={squares[4]} onClick={(e)=>handleClick(4,e)}/>\r\n            <Square value={squares[5]} onClick={(e)=>handleClick(5,e)}/>\r\n            <Square value={squares[6]} onClick={(e)=>handleClick(6,e)}/>\r\n            <Square value={squares[7]} onClick={(e)=>handleClick(7,e)}/>\r\n            <Square value={squares[8]} onClick={(e)=>handleClick(8,e)}/>  \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport {Container} from './myComponents/Container';\n\nfunction App() {\n  return (\n    <Container />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}